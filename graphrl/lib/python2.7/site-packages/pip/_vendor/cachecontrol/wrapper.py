from .adapter import CacheControlAdapter
from .cache import DictCache


<<<<<<< HEAD
def CacheControl(sess,
                 cache=None,
                 cache_etags=True,
                 serializer=None,
                 heuristic=None):

    cache = cache or DictCache()
    adapter = CacheControlAdapter(
=======
def CacheControl(
    sess,
    cache=None,
    cache_etags=True,
    serializer=None,
    heuristic=None,
    controller_class=None,
    adapter_class=None,
    cacheable_methods=None,
):

    cache = cache or DictCache()
    adapter_class = adapter_class or CacheControlAdapter
    adapter = adapter_class(
>>>>>>> 3eec399c976756f7e13721f91499b4ca8b64a1cb
        cache,
        cache_etags=cache_etags,
        serializer=serializer,
        heuristic=heuristic,
<<<<<<< HEAD
    )
    sess.mount('http://', adapter)
    sess.mount('https://', adapter)
=======
        controller_class=controller_class,
        cacheable_methods=cacheable_methods,
    )
    sess.mount("http://", adapter)
    sess.mount("https://", adapter)
>>>>>>> 3eec399c976756f7e13721f91499b4ca8b64a1cb

    return sess
